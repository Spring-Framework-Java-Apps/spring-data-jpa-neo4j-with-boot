spring:
  profiles:
    active: default
  jpa:
    databasePlatform: org.hibernate.dialect.H2Dialect
    generateDdl: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        globally_quoted_identifiers: true
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: 'jdbc:h2:~/test'
    username: sa
    password:
    driver-class-name: org.h2.Driver
    platform: h2
  data:
    neo4j:
      URI: foooooooooo
      indexes:
        auto: none
            #dir: 'target/var/'
            #filename: 'indexes-auto.cypher'
      repositories:
        enabled: true
  dao:
    exceptiontranslation:
      enabled: true
---
spring:
  profiles:
    active: embedded
  jpa:
    databasePlatform: org.hibernate.dialect.H2Dialect
    generateDdl: true
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        globally_quoted_identifiers: true
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: 'jdbc:h2:~/test'
    username: sa
    password:
    driver-class-name: org.h2.Driver
    platform: h2
  data:
    neo4j:
      URI: foooooooooo
      indexes:
        auto:
          dump:
            dir: 'target/var/'
            filename: 'indexes-auto.cypher'
      repositories:
        enabled: true
  dao:
    exceptiontranslation:
      enabled: true
---
spring:
  profiles:
    active: travis
  jpa:
    databasePlatform: org.hibernate.dialect.PostgreSQL95Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        globally_quoted_identifiers: true
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: 'jdbc:postgresql://localhost:5432/evaluator?user=evaluator&password=evaluatorpwd&schema=public&catalog=information_schema'
    username: evaluator
    password: evaluatorpwd
    driver-class-name: org.postgresql.Driver
    platform: postgresql
  data:
    neo4j:
      URI: bolt://127.0.0.1:7687
      username: neo4j
      password: secret
      encryption:
        level: NONE
      connection:
        pool:
          size: 50
        liveness:
          check:
            timeout: 240s
      verify:
        connection: true
